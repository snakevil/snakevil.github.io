<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lua on 天天蜕皮的大蛇 Re</title>
    <link>https://szen.in/tag/Lua/</link>
    <description>Recent content in Lua on 天天蜕皮的大蛇 Re</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 07 Apr 2017 04:43:00 +0000</lastBuildDate>
    
	<atom:link href="https://szen.in/tag/Lua/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GNUMake 使用静态模式规则</title>
      <link>https://szen.in/2017/04/GNUMake%E4%BD%BF%E7%94%A8%E9%9D%99%E6%80%81%E6%A8%A1%E5%BC%8F%E8%A7%84%E5%88%99/</link>
      <pubDate>Fri, 07 Apr 2017 04:43:00 +0000</pubDate>
      
      <guid>https://szen.in/2017/04/GNUMake%E4%BD%BF%E7%94%A8%E9%9D%99%E6%80%81%E6%A8%A1%E5%BC%8F%E8%A7%84%E5%88%99/</guid>
      <description>&lt;p&gt;最近在写 &lt;a href=&#34;https://github.com/snakevil-archive/luadex2&#34;&gt;Luadex2&lt;/a&gt; 时，顺手就用 &lt;a href=&#34;http://www.gnu.org/software/make/&#34;&gt;GNUMake&lt;/a&gt; 来做构建工具了——这样还能热热手把好久好久没用地 &lt;a href=&#34;http://www.gnu.org/software/make/&#34;&gt;GNUMake&lt;/a&gt; 再捡回来。中间碰到一个问题，我需要动态地扫描出全部的某类型的文件，然后按照同样的规则进行处理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lua 面向对象式开发的 __tostring 问题</title>
      <link>https://szen.in/2017/04/Lua%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%BC%8F%E5%BC%80%E5%8F%91%E7%9A%84tostring%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 07 Apr 2017 03:31:04 +0000</pubDate>
      
      <guid>https://szen.in/2017/04/Lua%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%BC%8F%E5%BC%80%E5%8F%91%E7%9A%84tostring%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;至 &lt;a href=&#34;http://luajit.org&#34;&gt;LuaJIT-2.0.4 为止&lt;/a&gt;，&lt;code&gt;tostring()&lt;/code&gt; 函数都只会检查并调用&lt;strong&gt;元表&lt;/strong&gt;的 &lt;code&gt;__tostring&lt;/code&gt; 函数。那么在面向对象式开发时，如何让基类定义地统一 &lt;code&gt;__tostring&lt;/code&gt; 机制生效？&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>